#! /usr/bin/env perl

use 5.006001;
use strict;
use warnings;
use Getopt::Std qw( getopts );

sub usage();

my %opts;

getopts("ht:a:d", \%opts) or die usage();

if ($opts{h}) {
    print usage();
    exit;
}

my $stap_args = $opts{a} || '';
my $time = $opts{t} || 20000;

if ($time !~ /^\d+$/) {
   die "Bad -t options value \"$time\": not look like time";
}

my $preamble = <<_EOC_;
probe begin {
    printf("Printing tcp retransmission \\n\\n")
}
_EOC_
chop $preamble;

my $stap_src = <<_EOC_;
$preamble

global record

probe kernel.function("tcp_retransmit_skb") {
    sock = \$sk
    rto = tcp_get_info_rto(sock)
    saddr   = format_ipaddr(__ip_sock_saddr(\$sk), __ip_sock_family(\$sk))
    daddr   = format_ipaddr(__ip_sock_daddr(\$sk), __ip_sock_family(\$sk))
    sport   = __tcp_sock_sport(\$sk)
    dport   = __tcp_sock_dport(\$sk)
    lastrto = record[saddr, sport, daddr, dport]
    state = tcp_ts_get_info_state(sock)

    if (lastrto != rto) {
        printf("%s:%d -> %s:%d state:%s rto:%d -> %d ms\\r\\n", saddr, sport, daddr, dport, tcp_sockstate_str(state), lastrto/1000, rto/1000)
    }

    record[saddr, sport, daddr, dport] = rto
}

probe timer.ms($time) {
    exit()
}
_EOC_

if ($opts{d}) {
    print $stap_src;
    exit;
}


open my $in, "|stap --skip-badvars $stap_args -"
    or die "Cannot run stap: $!\n";

print $in $stap_src;

close $in;

sub usage() {
    return <<'_EOC_';
Usage:
    tcp-retrans [optoins]
Options:
    -a <args>           Pass extra arguments to the stap utility.
    -t <time>(ms)       Time(ms) to execute.
    -d                  Dump out the systemtap script source.
    -h                  Print this usage.
Examples:
    tcp-retrans -t 20000
_EOC_
}
